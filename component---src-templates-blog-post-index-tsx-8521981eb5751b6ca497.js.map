{"version":3,"sources":["webpack:///./src/templates/BlogPost/styles.ts","webpack:///./src/templates/BlogPost/index.tsx"],"names":["styled","div","Title","h1","Date","Entry","Links","query","BlogPost","data","pageContext","post","markdownRemark","next","prev","frontmatter","title","date","content","html","to","fields","slug","rel"],"mappings":"qMAEoBA,IAAOC,IAAV,mEAAGD,CAAH,wBAAV,MAIME,EAAQF,IAAOG,GAAV,oEAAGH,CAAH,+DAILI,EAAOJ,IAAOC,IAAV,mEAAGD,CAAH,mFAIJK,EAAQL,IAAOC,IAAV,oEAAGD,CAAH,uDAQLM,EAAQN,IAAOC,IAAV,oEAAGD,CAAH,MCgCLO,EAAQ,aAYNC,UAtCE,EAAEC,OAAMC,kBACvB,MAAMC,EAAOF,EAAKG,gBACZ,KAACC,EAAD,KAAOC,GAAQJ,EACrB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KAAeC,EAAKI,YAAYC,OAChC,kBAAC,EAAD,KAAcL,EAAKI,YAAYE,MAC/B,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAeC,QAASP,EAAKQ,QAE/B,kBAAC,EAAD,KACE,8BACGL,GACC,kBAAC,IAAD,CAAMM,GAAIN,EAAKO,OAAOC,KAAMC,IAAI,YAAhC,KAA8CT,EAAKC,YAAYC,QAGnE,8BACGH,GACC,kBAAC,IAAD,CAAMO,GAAIP,EAAKQ,OAAOC,KAAMC,IAAI,QAAQV,EAAKE,YAAYC,MAAzD","file":"component---src-templates-blog-post-index-tsx-8521981eb5751b6ca497.js","sourcesContent":["import tw, {styled} from 'twin.macro';\n\nexport const Post = styled.div`\n  ${tw`w-full`}\n`;\n\nexport const Title = styled.h1`\n  ${tw`flex flex-row font-semibold`}\n`;\n\nexport const Date = styled.div`\n  ${tw`flex flex-row text-xs`}\n`;\n\nexport const Entry = styled.div`\n  ${tw`w-full mt-4`}\n\n  p {\n    ${`mb-4`}\n  }\n`;\n\nexport const Links = styled.div`\n`;","import React from 'react';\nimport {graphql, Link} from 'gatsby';\nimport {Layout, FormattedHtml} from '../../components';\n\nimport * as Styled from './styles';\n\ninterface Post {\n  html: React.ReactNode;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n    date: string;\n  };\n}\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pageContext: {\n    slug: string;\n    next: Post;\n    prev: Post;\n  };\n}\n\nconst BlogPost = ({data, pageContext}: Props) => {\n  const post = data.markdownRemark;\n  const {next, prev} = pageContext;\n  return (\n    <Layout>\n      <Styled.Title>{post.frontmatter.title}</Styled.Title>\n      <Styled.Date>{post.frontmatter.date}</Styled.Date>\n      <Styled.Entry>\n        <FormattedHtml content={post.html} />\n      </Styled.Entry>\n      <Styled.Links>\n        <span>\n          {prev && (\n            <Link to={prev.fields.slug} rel=\"previous\">← {prev.frontmatter.title}</Link>\n          )}\n        </span>\n        <span>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">{next.frontmatter.title} →</Link>\n          )}\n        </span>\n      </Styled.Links>\n    </Layout>\n  )\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: {eq: $slug} }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMM D, YYYY\")\n      }\n    }\n  }\n`;\n\nexport default BlogPost;\n"],"sourceRoot":""}