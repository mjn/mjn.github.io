{"version":3,"sources":["webpack:///./src/templates/BlogPost/styles.ts","webpack:///./src/templates/BlogPost/index.tsx"],"names":["styled","div","Title","h1","Date","Map","Entry","Links","Link","span","query","BlogPost","data","pageContext","post","markdownRemark","next","prev","frontmatter","title","date","mapSrc","src","content","html","to","fields","slug","rel"],"mappings":"qMAEoBA,IAAOC,IAAV,mEAAGD,CAAH,+CAIMA,IAAOC,IAAV,sEAAGD,CAAH,iDAJb,MAQME,EAAQF,IAAOG,GAAV,oEAAGH,CAAH,4BAILI,EAAOJ,IAAOC,IAAV,mEAAGD,CAAH,gDAIJK,EAAML,IAAOC,IAAV,kEAAGD,CAAH,kDAIHM,EAAQN,IAAOC,IAAV,oEAAGD,CAAH,oEAQLO,EAAQP,IAAOC,IAAV,oEAAGD,CAAH,uFAILQ,EAAOR,IAAOS,KAAV,mEAAGT,CAAH,yPC2BJU,EAAQ,aAaNC,UA7CE,EAAEC,OAAMC,kBACvB,MAAMC,EAAOF,EAAKG,gBACZ,KAACC,EAAD,KAAOC,GAAQJ,EAErB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KAAeC,EAAKI,YAAYC,OAChC,kBAAC,EAAD,KAAcL,EAAKI,YAAYE,MAC/B,kBAAC,EAAD,KACGN,EAAKI,YAAYG,QAChB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKC,IAAKR,EAAKI,YAAYG,UAG/B,kBAAC,IAAD,CAAeE,QAAST,EAAKU,QAE/B,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGP,GACC,kBAAC,IAAD,CAAMQ,GAAIR,EAAKS,OAAOC,KAAMC,IAAI,YAAhC,KAA8CX,EAAKC,YAAYC,QAGnE,kBAAC,EAAD,KACGH,GACC,kBAAC,IAAD,CAAMS,GAAIT,EAAKU,OAAOC,KAAMC,IAAI,QAAQZ,EAAKE,YAAYC,MAAzD","file":"component---src-templates-blog-post-index-tsx-a6142060a70aea68d4c9.js","sourcesContent":["import tw, {styled} from 'twin.macro';\n\nexport const Post = styled.div`\n  ${tw`w-full flex-col`}\n`;\n\nexport const Heading = styled.div`\n  ${tw`flex flex-col`}\n`;\n\nexport const Title = styled.h1`\n  ${tw`font-semibold`}\n`;\n\nexport const Date = styled.div`\n  ${tw`text-xs`}\n`;\n\nexport const Map = styled.div`\n  ${tw`mt-2 mb-4`}\n`;\n\nexport const Entry = styled.div`\n  ${tw`clear-both w-full mt-4`}\n\n  p {\n    ${`mb-4`}\n  }\n`;\n\nexport const Links = styled.div`\n  ${tw`w-full flex justify-between mt-8`}\n`;\n\nexport const Link = styled.span`\n  ${tw`text-blue-500 shadow-link`}\n`;\n","import React from 'react';\nimport {graphql, Link} from 'gatsby';\nimport {Layout, FormattedHtml, Map} from '../../components';\n\nimport * as Styled from './styles';\n\ninterface Post {\n  html: React.ReactNode;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n    date: string;\n    mapSrc?: string;\n  };\n}\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pageContext: {\n    slug: string;\n    next: Post;\n    prev: Post;\n  };\n}\n\nconst BlogPost = ({data, pageContext}: Props) => {\n  const post = data.markdownRemark;\n  const {next, prev} = pageContext;\n\n  return (\n    <Layout>\n      <Styled.Title>{post.frontmatter.title}</Styled.Title>\n      <Styled.Date>{post.frontmatter.date}</Styled.Date>\n      <Styled.Entry>\n        {post.frontmatter.mapSrc && (\n          <Styled.Map>\n            <Map src={post.frontmatter.mapSrc} />\n          </Styled.Map>\n        )}\n        <FormattedHtml content={post.html} />\n      </Styled.Entry>\n      <Styled.Links>\n        <Styled.Link>\n          {prev && (\n            <Link to={prev.fields.slug} rel=\"previous\">← {prev.frontmatter.title}</Link>\n          )}\n        </Styled.Link>\n        <Styled.Link>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">{next.frontmatter.title} →</Link>\n          )}\n        </Styled.Link>\n      </Styled.Links>\n    </Layout>\n  )\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: {eq: $slug} }) {\n      html\n      frontmatter {\n        title\n        mapSrc\n        date(formatString: \"MMM D, YYYY\")\n      }\n    }\n  }\n`;\n\nexport default BlogPost;\n"],"sourceRoot":""}